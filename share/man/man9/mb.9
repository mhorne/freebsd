.\" Copyright (c) 2023 The FreeBSD Foundation
.\"
.\" Portions of this documentation were written by Mitchell Horne
.\" under sponsorship from the FreeBSD Foundation.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd January 19, 2023
.Dt MB 9
.Os
.Sh NAME
.Nm mb ,
.Nm rmb ,
.Nm wmb
.Nd "memory barriers"
.Sh SYNOPSIS
.In machine/atomic.h
.Fn mb
.Fn rmb
.Fn wmb
.Sh DESCRIPTION
The
.Fn mb ,
.Fn rmb ,
and
.Fn wmb
functions enforce ordering on memory access.
.Pp
Unlike the related barriers provided by
.Xr atomic_thread_fence 9 , these memory barriers are guaranteed to impose
ordering constraints on I/O memory domains, and thus are suitable for use in
device drivers.
.Pp
The
.Fn mb
function creates a two-way data memory barrier.
Any loads or stores from memory the preceed the barrier, in program order, are
guaranteed to complete before its execution.
Any loads or stores the follow the barrier will not execute until after the barrier.
.Pp
The
.Fn rmb
function is a two-way barrier for memory reads (loads).
Any load that preceeds the barrier in program order is guaranteed to complete
before any load that follows the barrier.
.Pp
The
.Fn wmb
function is a two-way barrier for memory writes (stores).
Any store operation that preceeds the barrier in program order is guaranteed to complete
before any store that follows the barrier.
.Sh EXAMPLES
.Sh SEE ALSO
.Xr atomic_thread_fence 9
